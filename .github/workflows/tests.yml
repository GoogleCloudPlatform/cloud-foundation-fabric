# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "Tests"
on:
  # schedule:
  #   - cron: "45 2 * * *"
  pull_request:
    branches:
      - master

env:
  GOOGLE_APPLICATION_CREDENTIALS: "/home/runner/credentials.json"
  PYTEST_ADDOPTS: "--color=yes"
  PYTHON_VERSION: "3.10"
  TF_PLUGIN_CACHE_DIR: "/home/runner/.terraform.d/plugin-cache"
  TF_VERSION: 1.5.1
  TFTEST_COPY: 1

jobs:
  setup-tf-providers:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: false

      - name: Build lockfile and fetch providers
        shell: bash
        run: |
          mkdir -p ${{ env.TF_PLUGIN_CACHE_DIR }}
          echo 'plugin_cache_dir = "${{ env.TF_PLUGIN_CACHE_DIR }}"' | tee -a /home/runner/.terraformrc
          echo 'disable_checkpoint = true' | tee -a /home/runner/.terraformrc
          cp default-versions.tf tools/lockfile
          sed -i 's/>=\(.*# tftest\)/=\1/g' tools/lockfile/default-versions.tf
          cd tools/lockfile
          terraform init -upgrade=true

      - name: Upload Terraform provider cache
        uses: actions/cache@v3
        with:
          path: ${{ env.TF_PLUGIN_CACHE_DIR }}
          key: ${{ runner.os }}-terraform-${{ hashFiles('tools/lockfile/.terraform.lock.hcl') }}

      - name: Upload lockfile
        uses: actions/upload-artifact@v3
        with:
          name: lockfile
          path: tools/lockfile/.terraform.lock.hcl


  examples-blueprints:
    runs-on: ubuntu-latest
    needs: setup-tf-providers
    steps:
      - uses: actions/checkout@v3

      - name: Call composite action fabric-tests
        uses: ./.github/actions/fabric-tests
        with:
          PYTHON_VERSION: ${{ env.PYTHON_VERSION }}
          TERRAFORM_VERSION: ${{ env.TF_VERSION }}

      - name: Run tests on documentation examples
        run: pytest -vv -n4 --tb=line -k blueprints/ tests/examples

  examples-modules:
    runs-on: ubuntu-latest
    needs: setup-tf-providers
    steps:
      - uses: actions/checkout@v3

      - name: Call composite action fabric-tests
        uses: ./.github/actions/fabric-tests
        with:
          PYTHON_VERSION: ${{ env.PYTHON_VERSION }}
          TERRAFORM_VERSION: ${{ env.TF_VERSION }}

      - name: Run tests on documentation examples
        run: pytest -vv -n4 --tb=line -k modules/ tests/examples

  blueprints:
    runs-on: ubuntu-latest
    needs: setup-tf-providers
    steps:
      - uses: actions/checkout@v3

      - name: Call composite action fabric-tests
        uses: ./.github/actions/fabric-tests
        with:
          PYTHON_VERSION: ${{ env.PYTHON_VERSION }}
          TERRAFORM_VERSION: ${{ env.TF_VERSION }}

      - name: Run tests environments
        run: pytest -vv -n4 --tb=line tests/blueprints

  modules:
    runs-on: ubuntu-latest
    needs: setup-tf-providers
    steps:
      - uses: actions/checkout@v3

      - name: Call composite action fabric-tests
        uses: ./.github/actions/fabric-tests
        with:
          PYTHON_VERSION: ${{ env.PYTHON_VERSION }}
          TERRAFORM_VERSION: ${{ env.TF_VERSION }}

      - name: Run tests modules
        run: pytest -vv -n4 --tb=line tests/modules

  fast:
    runs-on: ubuntu-latest
    needs: setup-tf-providers
    steps:
      - uses: actions/checkout@v3

      - name: Call composite action fabric-tests
        uses: ./.github/actions/fabric-tests
        with:
          PYTHON_VERSION: ${{ env.PYTHON_VERSION }}
          TERRAFORM_VERSION: ${{ env.TF_VERSION }}

      - name: Run tests on FAST stages
        run: pytest -vv -n4 --tb=line tests/fast
