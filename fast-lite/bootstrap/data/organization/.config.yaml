# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# TODO: data access logs

# yaml-language-server: $schema=../../schemas/organization.schema.json

id: $defaults:organization/id
contacts:
  foo:
    - $iam_principals:gcp-organization-admins
iam:
  roles/billing.creator: []
iam_by_principals:
  $iam_principals:domain:
    - roles/browser
  $iam_principals:gcp-billing-admins:
    - roles/billing.admin
  $iam_principals:gcp-network-admins:
    - roles/cloudasset.owner
    - roles/cloudsupport.techSupportEditor
  $iam_principals:gcp-organization-admins:
    - roles/billing.admin
    - roles/cloudasset.owner
    - roles/cloudsupport.admin
    - roles/compute.osAdminLogin
    - roles/compute.osLoginExternalUser
    - roles/compute.xpnAdmin
    - roles/orgpolicy.policyAdmin
    - roles/owner
    - roles/resourcemanager.folderAdmin
    - roles/resourcemanager.organizationAdmin
    - roles/resourcemanager.projectCreator
    - roles/resourcemanager.tagAdmin
    - roles/iam.workforcePoolAdmin
  $iam_principals:gcp-security-admins:
    - roles/accesscontextmanager.policyAdmin
    - roles/cloudasset.owner
    - roles/cloudsupport.techSupportEditor
    - roles/iam.organizationRoleAdmin
    - roles/iam.securityReviewer
    - roles/logging.admin
    - roles/orgpolicy.policyAdmin
    - roles/securitycenter.admin
  $iam_principals:service_accounts/iac-0/iac-bootstrap-rw:
    - roles/accesscontextmanager.policyAdmin
    - roles/cloudasset.viewer
    - roles/essentialcontacts.admin
    - roles/iam.organizationRoleAdmin
    - roles/iam.workforcePoolAdmin
    - roles/logging.admin
    - roles/orgpolicy.policyAdmin
    - roles/resourcemanager.folderAdmin
    - roles/resourcemanager.organizationAdmin
    - roles/resourcemanager.projectCreator
    - roles/resourcemanager.projectMover
    - roles/resourcemanager.tagAdmin
    - roles/resourcemanager.tagUser
  $iam_principals:service_accounts/iac-0/iac-bootstrap-ro:
    - roles/cloudasset.viewer
    - roles/essentialcontacts.viewer
    - roles/iam.organizationRoleViewer
    - roles/iam.workforcePoolViewer
    - roles/logging.viewer
    - roles/orgpolicy.policyViewer
    - roles/resourcemanager.folderViewer
    - roles/resourcemanager.tagViewer
    - roles/serviceusage.serviceUsageViewer
iam_bindings_additive: {}
logging:
  # disable_default_log_sink: false
  storage_location: $locations:default
  # sinks:
  #   audit-logs:
  #     # description: foo
  #     # exclusions: {}
  #     destination:
  #       project_id: $project_ids.logging-0
  #       # type: logging
  #       # location: $locations.bigquery
  #     filter: |
  #       log_id("cloudaudit.googleapis.com/activity") OR
  #       log_id("cloudaudit.googleapis.com/system_event") OR
  #       log_id("cloudaudit.googleapis.com/policy") OR
  #       log_id("cloudaudit.googleapis.com/access_transparency")
  #   iam:
  #     destination:
  #       project_id: $project_ids.logging-0
  #     filter: |
  #       protoPayload.serviceName="iamcredentials.googleapis.com" OR
  #       protoPayload.serviceName="iam.googleapis.com" OR
  #       protoPayload.serviceName="sts.googleapis.com"
  #   vpc-sc:
  #     destination:
  #       project_id: $project_ids.logging-0
  #     filter: |
  #       protoPayload.metadata.@type="type.googleapis.com/google.cloud.audit.VpcServiceControlAuditMetadata"
  #   workspace-audit-logs:
  #     destination:
  #       project_id: $project_ids.logging-0
  #     filter: |
  #       protoPayload.serviceName="admin.googleapis.com" OR
  #       protoPayload.serviceName="cloudidentity.googleapis.com" OR
  #       protoPayload.serviceName="login.googleapis.com"
