#cloud-config

# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

users:
  - name: mysql
    uid: 2000

%{ if length(attached_disks) > 0 }
fs_setup:
  %{ for device, attrs in attached_disks }
  - label: None
    filesystem: ${attrs.filesystem}
    device: ${device}
    partition: auto
    overwrite: False
  %{ endfor }

mounts:
  %{ for device, attrs in attached_disks }
  - [ ${device}, /mnt/disks/${attrs.mount_name}]
  %{ endfor }

%{ endif }

write_files:
  - path: /var/lib/docker/daemon.json
    permissions: 0644
    owner: root
    content: |
      {
        "live-restore": true,
        "storage-driver": "overlay2",
        "log-opts": {
          "max-size": "1024m"
        }
      }
  - path: /run/secrets/mysql-passwd-orig.txt
    permissions: 0600
    owner: root
    content: |
      ${password}
  - path: /run/mysql-passwd.sh
    permissions: 0700
    owner: root
    content: |
      #!/bin/bash
      %{ if kms_config != null }
      base64 -d /run/secrets/mysql-passwd-orig.txt | docker run \
        --rm -i -v /run/secrets/:/data google/cloud-sdk:alpine \
        gcloud kms decrypt --ciphertext-file -  \
        --plaintext-file /data/mysql-passwd.txt \
        --keyring ${kms_config.keyring} \
        --key ${kms_config.key} \
        --project ${kms_config.project_id} \
        --location ${kms_config.location}
      %{ else }
      cp /run/secrets/mysql-passwd-orig.txt /run/secrets/mysql-passwd.txt
      %{ endif }
      cp /run/secrets/mysql-passwd.txt /run/mysql/root-passwd.txt
      chown 2000 /run/mysql/root-passwd.txt
  - path: /run/mysql/conf.d/my.cnf
    permissions: 0644
    owner: mysql
    content: |
      ${indent(6, mysql_config)}
  - path: /etc/systemd/system/mysql-data.service
    permissions: 0644
    owner: root
    content: |
      [Unit]
      Description=MySQL data disk
      ConditionPathExists=/dev/disk/by-id/google-mysql-data
      Before=mysql.service
      [Service]
      Type=oneshot
      ExecStart=/bin/mkdir -p /run/mysql
      ExecStart=/bin/chown -R 2000 /run/mysql
      %{ for device, attrs in attached_disks }
      ExecStart=/bin/chown 2000 /mnt/disks/${attrs.mount_name}
      %{ endfor }
      RemainAfterExit=true
  - path: /etc/systemd/system/mysql.service
    permissions: 0644
    owner: root
    content: |
      [Unit]
      Description=MySQL service
      After=mysql-data.service gcr-online.target docker.socket docker-events-collector.service
      Wants=mysql-data.service gcr-online.target docker.socket
      [Service]
      ExecStartPre=/run/mysql-passwd.sh
      ExecStart=/usr/bin/docker run --rm --name=mysql \
        --user 2000:2000 \
        --log-driver=gcplogs \
        --network host \
        -e MYSQL_ROOT_PASSWORD_FILE=/etc/mysql/root-passwd.txt \
        -v /mnt/disks/mysql-data:/var/lib/mysql \
        -v /run/mysql/:/etc/mysql \
        ${image} \
        --ignore-db-dir=lost+found
      ExecStop=/usr/bin/docker stop mysql

bootcmd:
  - systemctl start node-problem-detector

runcmd:
  - iptables -I INPUT 1 -p tcp -m tcp --dport 3306 -m state --state NEW,ESTABLISHED -j ACCEPT
  - systemctl daemon-reload
  - systemctl start mysql