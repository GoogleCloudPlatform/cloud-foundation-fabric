#cloud-config

# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# TODO: switch to the gcplogs logging driver, and set driver labels

# create a system user, otherwise docker-credential-gcr fails as root
users:
- name: cosuser
  uid: 2000
  groups: docker

write_files:
- path: /var/lib/docker/daemon.json
  permissions: 0644
  owner: root
  content: |
    {
      "live-restore": true,
      "storage-driver": "overlay2",
      "log-opts": {
        "max-size": "1024m"
      }
    }

%{ for path, data in files }
- path: ${path}
  owner: ${lookup(data, "owner", "root")}
  permissions: ${lookup(data, "permissions", "0644")}
  content: |
    ${indent(4, data.content)}
%{ endfor }

# container service
- path: /etc/systemd/system/cosapp.service
  permissions: 0644
  owner: root
  content: |
    [Unit]
    Description=Start Application container
    After=gcr-online.target docker.socket
    Wants=gcr-online.target docker.socket docker-events-collector.service
    [Service]
    User=cosuser
    ExecStartPre=/usr/bin/docker-credential-gcr configure-docker
    ExecStart=/usr/bin/docker run --rm --name=cosapp  \
      --log-driver=${log_driver} --network host \
      %{~ for host_path, mount_path in volumes ~}
      -v ${host_path}:${mount_path} \
      %{~ endfor ~}
      ${image} ${extra_args}
    ExecStop=/usr/bin/docker stop cosapp
    ExecStopPost=/usr/bin/docker rm cosapp

runcmd:
- systemctl daemon-reload
%{ for proto, ports in fw_runcmds ~}
  %{~ for port in ports ~}
- iptables -I INPUT 1 -p ${proto} -m ${proto} --dport ${port} -m state --state NEW,ESTABLISHED -j ACCEPT
  %{~ endfor ~}
%{ endfor ~}
%{ for cmd in pre_runcmds ~}
- ${cmd}
%{ endfor ~}
- systemctl start cosapp
%{ for cmd in pre_runcmds ~}
- ${cmd}
%{ endfor ~}
