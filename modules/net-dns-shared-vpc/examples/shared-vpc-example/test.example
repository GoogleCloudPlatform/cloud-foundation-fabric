# This file is only for testing purposes

# Creating 2 VMs, one in each service project
resource "google_compute_instance" "vm1" {
  project      = module.project-service-1.project_id
  name         = "test-vm1"
  machine_type = "n1-standard-1"
  zone         = "europe-west1-c"

  tags = ["test-dns"]

  boot_disk {
    initialize_params {
      image = "debian-cloud/debian-9"
    }
  }

  network_interface {
    subnetwork         = "subnet-01"
    subnetwork_project = module.project-host.project_id

    access_config {
    }
  }
}

resource "google_compute_instance" "vm2" {
  project      = module.project-service-2.project_id
  name         = "test-vm2"
  machine_type = "n1-standard-1"
  zone         = "europe-west1-c"

  tags = ["test-dns"]

  boot_disk {
    initialize_params {
      image = "debian-cloud/debian-9"
    }
  }

  network_interface {
    subnetwork         = "subnet-01"
    subnetwork_project = module.project-host.project_id

    access_config {
    }
  }
}

# Creating firewall rule for ICMP and SSH

resource "google_compute_firewall" "test-firewall" {
  name    = "test-firewall"
  project = module.project-host.project_id
  network = module.vpc.self_link

  allow {
    protocol = "icmp"
  }

  allow {
    protocol = "tcp"
    ports    = ["22"]
  }

  target_tags = ["test-dns"]
}

# Creating DNS records

resource "google_dns_record_set" "record-vm1" {
  name         = "test.${var.teams[0]}.${var.dns_domain}."
  project      = module.cloud-dns.teams_dns_networks[0][var.teams[0]]["project"]
  managed_zone = var.teams[0]
  type         = "A"
  ttl          = 300

  rrdatas = [google_compute_instance.vm1.network_interface[0].network_ip]
}

resource "google_dns_record_set" "record-vm2" {
  name         = "test.${var.teams[1]}.${var.dns_domain}."
  project      = module.cloud-dns.teams_dns_networks[0][var.teams[1]]["project"]
  managed_zone = var.teams[1]
  type         = "A"
  ttl          = 300

  rrdatas = [google_compute_instance.vm2.network_interface[0].network_ip]
}

# Next step: SSH to the instances and ensure you can resolve the above DNS records

/* Example:
legranda@test-vm1:~$ ping test.appteam1.prod.internal
PING test.appteam1.prod.internal (10.10.1.2) 56(84) bytes of data.
64 bytes from test-vm1.europe-west1-c.c.test-dns-app-team1.internal (10.10.1.2): icmp_seq=1 ttl=64 time=0.020 ms
64 bytes from test-vm1.europe-west1-c.c.test-dns-app-team1.internal (10.10.1.2): icmp_seq=2 ttl=64 time=0.031 ms
^C
--- test.appteam1.prod.internal ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1029ms
rtt min/avg/max/mdev = 0.020/0.025/0.031/0.007 ms
legranda@test-vm1:~$ ping test.appteam2.prod.internal
PING test.appteam2.prod.internal (10.10.1.3) 56(84) bytes of data.
64 bytes from test-vm2.europe-west1-c.c.test-dns-app-team2.internal (10.10.1.3): icmp_seq=1 ttl=64 time=1.43 ms
64 bytes from test-vm2.europe-west1-c.c.test-dns-app-team2.internal (10.10.1.3): icmp_seq=2 ttl=64 time=0.207 ms
^C
--- test.appteam2.prod.internal ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1001ms
rtt min/avg/max/mdev = 0.207/0.821/1.436/0.615 ms
*/