# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
retryPeriod: 4 days ago

processors:
  - recommendations
  
processIf: |
  {% if send|recurring_date("2021-01-01") == ""|strftime('%Y-%m-%d') %}1{% endif %}

# If set to true, all outputs must succeed in order the function to be considered successful.
allOutputsMustSucceed: true

recommendations:
  fetch_recommendations: "{{ includeRecommendations|default('true') }}"
  fetch_insights: "{{ includeRecommendations|default('true') }}"
  recommender_types:
    # Full list: https://cloud.google.com/recommender/docs/recommenders#recommenders
    - google.compute.instance.MachineTypeRecommender # Location: zone
    - google.compute.instanceGroupManager.MachineTypeRecommender # Location: zone
    - google.compute.instance.IdleResourceRecommender # Location: zone
    - google.compute.disk.IdleResourceRecommender # Location: region & zone
    - google.compute.address.IdleResourceRecommender # Location: region & global
    - google.compute.image.IdleResourceRecommender # Location: region & global
    - google.compute.commitment.UsageCommitmentRecommender # Location: region
  recommendation_filter: 'stateInfo.state=ACTIVE'
  insight_types:
    # Full list: https://cloud.google.com/recommender/docs/insights/insight-types
    - google.compute.firewall.Insight
    - google.iam.policy.Insight
    - google.iam.serviceAccount.Insight
  insight_filter: 'stateInfo.state=ACTIVE'
  projects: "{{ projects|json_encode() }}" # Projects from Pub/Sub message
  locations: 
    - global
    - europe
    - us
    - europe-west1*
    - europe-north1*
    - us-central1*
  vars:
    types:
      organizations: "Organization"
      projects: "Project"
      folders: "Folder"
      billingAccount: "Billing account"
    commitment_types:
      THIRTY_SIX_MONTH: "36 months"
      TWELVE_MONTH: "12 months"
    links:
      google.compute.instance.IdleResourceRecommender: https://console.cloud.google.com/home/recommendations/list/COMPUTE_IDLE_RESOURCES?
      google.compute.instance.MachineTypeRecommender: https://console.cloud.google.com/home/recommendations/list/VM_COST?
      google.compute.instanceGroupManager.MachineTypeRecommender: https://console.cloud.google.com/home/recommendations/list/VM_COST?
      google.compute.disk.IdleResourceRecommender: https://console.cloud.google.com/home/recommendations/list/COMPUTE_IDLE_RESOURCES?
      google.compute.firewall.Insight: https://console.cloud.google.com/home/recommendations/list/SHADOWED_FIREWALL_RULES?
      google.compute.commitment.UsageCommitmentRecommender: https://console.cloud.google.com/home/recommendations/list/PROJECT_COMMITMENTS?
      google.iam.policy.Insight: https://console.cloud.google.com/home/recommendations/list/IAM_ROLES?
    subtypes:
      CHANGE_MACHINE_TYPE: "Change instance types"
      CHANGE_MACHINE_FAMILY: "Change instance families"
      STOP_VM: "Stop idle instances"
      SNAPSHOT_AND_DELETE_DISK: "Snapshot and remove disks"
      DELETE_DISK: "Remove disks"
      PERMISSIONS_USAGE: "Improve IAM permissions"
      SERVICE_ACCOUNT_USAGE: "Remove unused service accounts"
      REPLACE_ROLE: "Replace IAM roles"
      REMOVE_ROLE: "Remove unused IAM roles"
      SHADOWED_RULE: "Resolve shadowed firewall rules"
      UNUSED_RULE: "Remove unused firewall rules"
      UNUSED_ATTRIBUTE: "Unused firewall attributes"
      DELETE_ADDRESS: "Delete unused public IP addresses"
      PROJECT_SCOPED_COMMITMENTS: "Purchase project commitments"
      DELETE_IMAGE: "Delete unused images"

outputs:
  - type: gcs
    bucket: YOUR-RECOMMENDATIONS-BUCKET
    object: Recommendations_{{ ""|strftime('%b-%Y') }}.xlsx
    base64decode: true
    contents: |
      {%- set workbook -%}
      {%- for parent, parent_recommendations in recommendations.items() -%}
        {% set total_cost = namespace(cost=0) %}
        {% set row_class = cycler('odd', 'even') %}
        {%- for r in parent_recommendations -%}
          {% if loop.first %}
          <table>
            <thead>
              <tr>
                <td><b>Parent</b></td>
                <td><b>Resource</td>
                <td><b>Recommended action</b></td>
                <td><b>Description</b></td>
                <td><b>Monthly impact</b></td>
              </tr>
            </thead>
            <tbody>
          {% endif %}
              {% for og in r.recommendation.content.operation_groups %}
                {% for op in og.operations %}
                {% if op.action != 'test' and not op.resource.endswith('$snapshot-name') %}
                <tr class="{{ row_class.next() }}">
                  <td>{{ types[r.type] }}: {% if r.type == "projects" %}{{ r.parent[2] }} ({{ r.parent[0] }}){% else %}{{ r.parent }}{% endif %}</td>
                  <td>{% if r.recommender_type in links %}<a href="{{ links[r.recommender_type] }}{{ r.link }}">{% endif %}{% if op.resource_type != 'compute.googleapis.com/Commitment' -%}
                        {{ op.resource|split("/")|index(-1) }}
                      {%- else -%}
                        {% for res in op.value.resources %}{{ res.type|title }}: {% if res.type == 'VCPU' %}{{ res.amount }} vCPU(s){% else %}{{ (res.amount/1024)|round }} GB{% endif %}{% endfor %}
                      {%- endif %}{% if r.recommender_type in links %}</a>{% endif %}
                  </td>
                  <td>{{ op.action|title }}</td>
                  <td>{{ r.recommendation.description }}</td>
                  <td>{% if 'cost_projection' in r.recommendation.primary_impact %}{{ r.recommendation.primary_impact.cost_projection.cost|format_cost() }}{% endif %}</td>
                </tr>
                {% endif %}
                {% endfor %}
              {% endfor %}
              {%- if 'cost_projection' in r.recommendation.primary_impact -%}
                {%- set total_cost.cost = total_cost.cost + r.recommendation.primary_impact.cost_projection.cost|get_cost() -%}
              {%- endif -%}
          {% if loop.last %}
              <tfoot>
                <tr>
                    <td colspan="3">Total monthly cost impact:</td>
                    <td>{{ "{:.2f}".format(total_cost.cost) }} USD</td>
                </tr>
              </tfoot>
            </tbody>
          </table>
          {% endif %}              
        {%- endfor -%}
      {%- endfor -%}
      {%- endset -%}{{ workbook|html_table_to_xlsx }}

  - type: mail
    # Transports will be tried in sequence, until one succeeds
    transports:
      - type: smtp
        host: your.smtp.server
        port: 25
        starttls: false
      - type: sendgrid
        apiKey: YOUR-SENDGRID-API-KEY
    from: notifications@your.smtp.server
    to: "{{ recipients|join(',') }}"
    subject: |
      [Google Cloud Platform] Recommendations and Insights report, {{ ""|strftime('%b %Y') }}
    body:
      attachments:
        - gs://YOUR-RECOMMENDATIONS-BUCKET/Recommendations_{{ ""|strftime('%b-%Y') }}.xlsx
      images: # Images to inline in the email
        - img/sample-logo-small.png
      html: |
        <html><head><title>Recommendations and Insights, {{ ""|strftime('%b %Y') }}</title>
        <style type="text/css">
        body {
            font-family: 'Google Sans', 'Segoe UI', sans-serif;
        }
        table {
            border-collapse: collapse;
        }
        thead {
            background-color: #0F9D58;
            color: white;
        }
        th {
            padding: 0.5em;
            text-align: left;
        }
        td {
            padding: 0.2em;
        }
        .even {
            background-color: #ddd;
        }
        .count {
          text-align: right;
          font-weight: bolder;
          font-size: 1.5em;
          color: #0F9D58;
        }
        .subtype {
          font-weight: bold;
          font-size: 1.5em;
        }
        .recommendation {
          padding: 1em;
          margin: 1em;
        }
        .one-recommendation {
          border: 2px solid #4285F4;
        }
        .one-recommendation td {
          padding: 0.5em;
        }
        .insight {
          padding: 1em;
          margin: 1em;
        }
        .one-insight {
          border: 2px solid #F4B400;
        }
        .one-insight td {
          padding: 0.5em;
        }
        </style>
        </head>
        <body>
          <h1>Google Cloud Platform - Recommendations and Insights report, {{ ""|strftime('%b %Y') }}</h1>
          <img src="cid:sample-logo-small.png" alt="Sample logo" />
          <h2>Recommendations</h2>
          {% for parent, rollup in recommendations_rollup.items() %}
            {% set total_cost = namespace(cost=0) %}
            {% set row_class = cycler('1', '2', '3', 'break') %}
            {% for sub_type, stats in rollup.items() %}
              {% if loop.first %}
              <h3>{{ types[stats.type] }}: {% if stats.type == "projects" %}{{ stats.parent[2] }} ({{ stats.parent[0] }}){% else %}{{ stats.parent }}{% endif %}</h3>
              <table>
                <tr>
              {% endif %}
              {% if row_class.next() == 'break' %}
                </tr>
                <tr>
              {% endif %}
                  <td class="recommendation">
                    <table class="one-recommendation" width="100%">
                      <tr>
                        <td class="subtype">{{ subtypes[sub_type] }}</td>
                        <td class="count">{{ stats.count }}</td>
                      </tr>
                      <tr>
                        <td colspan="2" class="impact">Total monthly cost impact: <b>{{ stats.cost|format_cost }}</b></td>
                      </tr>
                    </table>
                  </td>
              {% if loop.last %}
                </tr>
              </table>
              <a href="https://console.cloud.google.com/home/recommendations?project={% if stats.type == "projects" %}{{ stats.parent[0] }}{% else %}{{ stats.parent }}{% endif %}">View recommendations in Cloud Console.</a>
              {% endif %}

            {% endfor %}  
          {% endfor %}

          <h2>Insights</h2>
          {% for parent, rollup in insights_rollup.items() %}
            {% set row_class = cycler('1', '2', '3', 'break') %}
      
            {% for sub_type, stats in rollup.items() %}
              {% if loop.first %}
              <h3>{{ types[stats.type] }}: {% if stats.type == "projects" %}{{ stats.parent[2] }} ({{ stats.parent[0] }}){% else %}{{ stats.parent }}{% endif %}</h3>
              <table>
                <tr>
              {% endif %}
              {% if row_class.next() == 'break' %}
                </tr>
                <tr>
              {% endif %}
                  <td class="insight">
                    <table class="one-insight" width="100%">
                      <tr>
                        <td class="subtype">{{ subtypes[sub_type] }}</td>
                        <td class="count">{{ stats.count }}</td>
                      </tr>
                    </table>
                  </td>
              {% if loop.last %}
                </tr>
              </table>
              <a href="https://console.cloud.google.com/home/recommendations?project={% if stats.type == "projects" %}{{ stats.parent[0] }}{% else %}{{ stats.parent }}{% endif %}">View insights in Cloud Console.</a>
              {% endif %}
            {% endfor %}  
          {% endfor %}

        </body>
        </html>
