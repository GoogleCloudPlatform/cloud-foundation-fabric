# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# TODO: data access logs

# yaml-language-server: $schema=../../schemas/organization.schema.json

id: $defaults:organization/id
contacts:
  default:
    - $iam_principals:gcp-organization-admins
# conditional authoritative IAM bindings
iam_bindings:
  # these don't conflict with IAM / IAM by principal
  pf_org_policy_admin:
    role: roles/orgpolicy.policyAdmin
    members:
      - $iam_principals:service_accounts/iac-0/iac-pf-rw
    condition:
      expression: resource.matchTag('${organization.id}/context', 'project-factory')
      title: Project factory org policy admin
  pf_org_policy_viewer:
    role: roles/orgpolicy.policyViewer
    members:
      - $iam_principals:service_accounts/iac-0/iac-pf-ro
    condition:
      expression: resource.matchTag('${organization.id}/context', 'project-factory')
      title: Project factory org policy viewer
# authoritative IAM bindings by principal
iam_by_principals:
  $iam_principals:gcp-organization-admins:
    - roles/cloudasset.owner
    - roles/cloudsupport.admin
    - roles/compute.osAdminLogin
    - roles/compute.osLoginExternalUser
    - roles/compute.xpnAdmin
    - roles/orgpolicy.policyAdmin
    - roles/owner
    - roles/resourcemanager.folderAdmin
    - roles/resourcemanager.organizationAdmin
    - roles/resourcemanager.projectCreator
    - roles/resourcemanager.tagAdmin
    - roles/iam.workforcePoolAdmin
  $iam_principals:service_accounts/iac-0/iac-org-rw:
    - roles/accesscontextmanager.policyAdmin
    - roles/cloudasset.viewer
    - roles/essentialcontacts.admin
    - roles/iam.organizationRoleAdmin
    - roles/iam.workforcePoolAdmin
    - roles/logging.admin
    - roles/orgpolicy.policyAdmin
    - roles/resourcemanager.folderAdmin
    - roles/resourcemanager.organizationAdmin
    - roles/resourcemanager.projectCreator
    - roles/resourcemanager.projectMover
    - roles/resourcemanager.tagAdmin
    - roles/resourcemanager.tagUser
  $iam_principals:service_accounts/iac-0/iac-org-ro:
    - roles/cloudasset.viewer
    - roles/essentialcontacts.viewer
    - roles/iam.organizationRoleViewer
    - roles/iam.workforcePoolViewer
    - roles/logging.viewer
    - roles/orgpolicy.policyViewer
    - roles/resourcemanager.folderViewer
    - roles/resourcemanager.tagViewer
    - roles/serviceusage.serviceUsageViewer
  $iam_principals:service_accounts/iac-0/iac-networking-rw:
    - roles/compute.orgFirewallPolicyAdmin
    - roles/compute.xpnAdmin
  $iam_principals:service_accounts/iac-0/iac-networking-ro:
    - roles/compute.orgFirewallPolicyUser
    - roles/compute.xpnAdmin
  $iam_principals:service_accounts/iac-0/iac-security-rw:
    - roles/cloudasset.viewer
  $iam_principals:service_accounts/iac-0/iac-vpcsc-rw:
    - roles/accesscontextmanager.policyAdmin
    - roles/cloudasset.viewer
  $iam_principals:service_accounts/iac-0/iac-vpcsc-ro:
    - roles/accesscontextmanager.policyReader
    - roles/cloudasset.viewer
logging:
  # disable_default_log_sink: false
  storage_location: $locations:default
  sinks:
    audit-logs:
      # description: foo
      # exclusions: {}
      destination: $log_buckets:log-0/audit-logs
      filter: |
        log_id("cloudaudit.googleapis.com/activity") OR
        log_id("cloudaudit.googleapis.com/system_event") OR
        log_id("cloudaudit.googleapis.com/policy") OR
        log_id("cloudaudit.googleapis.com/access_transparency")
    iam:
      destination: $log_buckets:log-0/iam
      filter: |
        protoPayload.serviceName="iamcredentials.googleapis.com" OR
        protoPayload.serviceName="iam.googleapis.com" OR
        protoPayload.serviceName="sts.googleapis.com"
    vpc-sc:
      destination: $log_buckets:log-0/vpc-sc
      filter: |
        protoPayload.metadata.@type="type.googleapis.com/google.cloud.audit.VpcServiceControlAuditMetadata"
# authoritative IAM bindings by role
# these are internally merged with IAM by principal
iam:
  # reset default role on new organizations
  roles/billing.creator: []
