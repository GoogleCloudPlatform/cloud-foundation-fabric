# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

values:
  module.nginx-mig.google_compute_region_instance_group_manager.default[0]:
    all_instances_config: []
    auto_healing_policies: []
    base_instance_name: mig-test
    description: Terraform managed.
    instance_flexibility_policy:
    - instance_selections:
      - machine_types:
        - c4-highcpu-16
        - c4-highcpu-8
        name: preferred-2
        rank: 2
      - machine_types:
        - n2-standard-16
        - n2-standard-8
        name: preferred-1
        rank: 1
    list_managed_instances_results: PAGELESS
    name: mig-test
    named_port: []
    params: []
    project: project-id
    region: europe-west8
    stateful_disk: []
    stateful_external_ip: []
    stateful_internal_ip: []
    target_pools: null
    target_size: 3
    timeouts: null
    version:
    - name: default
      target_size: []
    wait_for_instances: false
    wait_for_instances_status: STABLE
  module.nginx-template.google_compute_instance_template.default[0]:
    advanced_machine_features: []
    can_ip_forward: false
    description: Managed by the compute-vm Terraform module.
    disk:
    - auto_delete: true
      boot: true
      disk_encryption_key: []
      disk_name: null
      disk_size_gb: 10
      disk_type: pd-balanced
      guest_os_features: null
      labels: null
      resource_manager_tags: null
      resource_policies: null
      source: null
      source_image: projects/cos-cloud/global/images/family/cos-stable
      source_image_encryption_key: []
      source_snapshot: null
      source_snapshot_encryption_key: []
    effective_labels:
      goog-terraform-provisioned: 'true'
    enable_display: null
    guest_accelerator: []
    instance_description: null
    key_revocation_action_type: null
    labels: null
    machine_type: f1-micro
    metadata:
      user-data: "#cloud-config\n\n# Copyright 2023 Google LLC\n#\n# Licensed under\
        \ the Apache License, Version 2.0 (the \"License\");\n# you may not use this\
        \ file except in compliance with the License.\n# You may obtain a copy of\
        \ the License at\n#\n#     https://www.apache.org/licenses/LICENSE-2.0\n#\n\
        # Unless required by applicable law or agreed to in writing, software\n# distributed\
        \ under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES\
        \ OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License\
        \ for the specific language governing permissions and\n# limitations under\
        \ the License.\n\n# https://hub.docker.com/r/nginx/nginx/\n# https://nginx.io/manual/toc/#installation\n\
        \nusers:\n  - name: nginx\n    uid: 2000\n  \n\nwrite_files:\n  - path: /var/lib/docker/daemon.json\n\
        \    permissions: 0644\n    owner: root\n    content: |\n      {\n       \
        \ \"live-restore\": true,\n        \"storage-driver\": \"overlay2\",\n   \
        \     \"log-opts\": {\n          \"max-size\": \"1024m\"\n        }\n    \
        \  }\n\n\n  # nginx container service\n  - path: /etc/systemd/system/nginx.service\n\
        \    permissions: 0644\n    owner: root\n    content: |\n      [Unit]\n  \
        \    Description=Start nginx container\n      After=gcr-online.target docker.socket\n\
        \      Wants=gcr-online.target docker.socket docker-events-collector.service\n\
        \      [Service]\n      Environment=\"HOME=/home/nginx\"\n      ExecStartPre=/usr/bin/docker-credential-gcr\
        \ configure-docker\n      ExecStart=/usr/bin/docker run --rm --name=nginx\
        \  \\\n        --network host \\\n        nginxdemos/hello:plain-text\n  \
        \    ExecStop=/usr/bin/docker stop nginx\n\n  \n\nbootcmd:\n  - systemctl\
        \ start node-problem-detector\n\nruncmd:\n  - iptables -I INPUT 1 -p tcp -m\
        \ tcp --dport 80 -m state --state NEW,ESTABLISHED -j ACCEPT\n  - systemctl\
        \ daemon-reload\n  - systemctl start nginx\n"
    metadata_startup_script: null
    min_cpu_platform: null
    name_prefix: nginx-template-
    network_interface:
    - access_config: []
      alias_ip_range: []
      ipv6_access_config: []
      network: projects/xxx/global/networks/aaa
      network_ip: null
      nic_type: null
      queue_count: null
      subnetwork: subnet_self_link
    network_performance_config: []
    partner_metadata: null
    project: project-id
    region: europe-west8
    reservation_affinity: []
    resource_manager_tags: null
    resource_policies: null
    scheduling:
    - automatic_restart: true
      availability_domain: null
      graceful_shutdown: []
      host_error_timeout_seconds: null
      instance_termination_action: null
      local_ssd_recovery_timeout: []
      maintenance_interval: null
      max_run_duration: []
      min_node_cpus: null
      node_affinities: []
      on_host_maintenance: MIGRATE
      on_instance_stop_action: []
      preemptible: false
      provisioning_model: STANDARD
      termination_time: null
    service_account:
    - scopes:
      - https://www.googleapis.com/auth/devstorage.read_only
      - https://www.googleapis.com/auth/logging.write
      - https://www.googleapis.com/auth/monitoring.write
    shielded_instance_config: []
    tags:
    - http-server
    - ssh
    terraform_labels:
      goog-terraform-provisioned: 'true'
    timeouts: null

counts:
  google_compute_instance_template: 1
  google_compute_region_instance_group_manager: 1
  modules: 2
  resources: 2